@page "/syncfusion-demo"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Lists
@layout EmptyLayout

<PageTitle>Syncfusion Demo</PageTitle>


@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
Â 
<SfAppBar ColorMode="AppBarColor.Primary">
    <SfButton CssClass="e-inherit" IconCss="e-icons e-menu"></SfButton>
    <span class="regular">Blazor AppBar</span>
    <AppBarSpacer></AppBarSpacer>
</SfAppBar>

<div class="container-fluid mt-4">
    <h1 class="mb-4">Syncfusion Components Demo</h1>

    <p class="lead mb-5">This page demonstrates that Syncfusion is properly configured in your project with proper styling.</p>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Syncfusion Buttons</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex gap-2">
                        <SfButton CssClass="e-primary">Primary</SfButton>
                        <SfButton CssClass="e-success">Success</SfButton>
                        <SfButton CssClass="e-warning">Warning</SfButton>
                        <SfButton CssClass="e-danger">Danger</SfButton>
                        <SfButton CssClass="e-info">Info</SfButton>
                    </div>
                    <div class="mt-3">
                        <SfButton IsPrimary="true" IconCss="e-icons e-plus">Add New</SfButton>
                        <SfButton CssClass="e-outline e-primary ms-2">Outline</SfButton>
                        <SfButton CssClass="e-flat e-primary ms-2">Flat</SfButton>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Syncfusion DatePicker</h5>
                </div>
                <div class="card-body">
                    <SfDatePicker TValue="DateTime?" Placeholder="Choose a date" ShowClearButton="true"></SfDatePicker>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Syncfusion Grid</h5>
                </div>
                <div class="card-body">
                    <SfGrid DataSource="@Employees" AllowPaging="true" AllowSorting="true" Width="100%">
                        <GridPageSettings PageSize="5"></GridPageSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(Employee.EmployeeId) HeaderText="ID" TextAlign="TextAlign.Right" Width="80"></GridColumn>
                            <GridColumn Field=@nameof(Employee.Name) HeaderText="Name" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Employee.Title) HeaderText="Designation" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Employee.HireDate) HeaderText="Hire Date" Format="d" Type="ColumnType.Date" Width="130"></GridColumn>
                            <GridColumn HeaderText="Actions" Width="120">
                                <Template>
                                    @{
                                        var employee = (context as Employee);
                                        <div class="d-flex gap-2">
                                            <button class="btn btn-sm btn-outline-primary">Edit</button>
                                            <button class="btn btn-sm btn-outline-danger">Delete</button>
                                        </div>
                                    }
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Syncfusion Sidebar</h5>
                </div>
                <div class="card-body">
                    <SfButton @onclick="ToggleSidebar" IsPrimary="true">Toggle Sidebar</SfButton>
                    
                    <SfSidebar @bind-IsOpen="@SidebarIsOpen" Width="280px" Type="SidebarType.Push" Target=".sidebar-target" MediaQuery="(min-width: 600px)">
                        <ChildContent>
                            <div class="sidebar-header p-3 border-bottom">
                                <h4 class="mb-0">Sidebar Demo</h4>
                            </div>
                            <div class="p-3">
                                <SfListView DataSource="@ListItems" TValue="ListDataModel" CssClass="sf-listview-custom">
                                    <ListViewFieldSettings TValue="ListDataModel" Id="Id" Text="Text" IconCss="IconCss"></ListViewFieldSettings>
                                </SfListView>
                            </div>
                        </ChildContent>
                    </SfSidebar>
                    
                    <div class="sidebar-target mt-3 p-4 border rounded">
                        <p>This content will be pushed when the sidebar opens.</p>
                        <p>Try clicking the button above to see the sidebar in action.</p>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Syncfusion TreeView</h5>
                </div>
                <div class="card-body">
                    <SfTreeView TValue="TreeItem" @bind-SelectedNodes="@SelectedNodes">
                        <TreeViewFieldsSettings TValue="TreeItem" Id="Id" Text="Name" ParentID="ParentId" HasChildren="HasChild" Expanded="Expanded" DataSource="@TreeData" />
                    </SfTreeView>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Syncfusion Dropdown</h5>
                </div>
                <div class="card-body">
                    <SfDropDownList TValue="string" TItem="ListDataModel" Placeholder="Select an item" DataSource="@ListItems">
                        <DropDownListFieldSettings Value="Id" Text="Text"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Syncfusion Tabs</h5>
                </div>
                <div class="card-body">
                    <SfTab>
                        <TabItems>
                            <TabItem>
                                <ChildContent>
                                    <TabHeader Text="Dashboard"></TabHeader>
                                </ChildContent>
                                <ContentTemplate>
                                    <div class="p-3">
                                        <p>Dashboard content goes here.</p>
                                    </div>
                                </ContentTemplate>
                            </TabItem>
                            <TabItem>
                                <ChildContent>
                                    <TabHeader Text="Projects"></TabHeader>
                                </ChildContent>
                                <ContentTemplate>
                                    <div class="p-3">
                                        <p>Projects content goes here.</p>
                                    </div>
                                </ContentTemplate>
                            </TabItem>
                            <TabItem>
                                <ChildContent>
                                    <TabHeader Text="Settings"></TabHeader>
                                </ChildContent>
                                <ContentTemplate>
                                    <div class="p-3">
                                        <p>Settings content goes here.</p>
                                    </div>
                                </ContentTemplate>
                            </TabItem>
                        </TabItems>
                    </SfTab>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .sf-listview-custom .e-list-item {
        padding: 10px 15px;
        border-bottom: 1px solid #f0f0f0;
    }
    
    .sf-listview-custom .e-list-item:hover {
        background-color: #f5f5f5;
    }
    
    .sf-listview-custom .e-list-text {
        font-size: 14px;
    }
    
    .sf-listview-custom .e-list-icon {
        margin-right: 10px;
    }
</style>

@code {
    // Grid data model
    public class Employee
    {
        public int EmployeeId { get; set; }
        public required string Name { get; set; }
        public required string Title { get; set; }
        public DateTime HireDate { get; set; }
    }

    private List<Employee> Employees = new List<Employee>
    {
        new Employee { EmployeeId = 1, Name = "John Doe", Title = "Developer", HireDate = new DateTime(2021, 1, 15) },
        new Employee { EmployeeId = 2, Name = "Jane Smith", Title = "Designer", HireDate = new DateTime(2021, 3, 10) },
        new Employee { EmployeeId = 3, Name = "Robert Johnson", Title = "Manager", HireDate = new DateTime(2020, 11, 5) },
        new Employee { EmployeeId = 4, Name = "Emily Davis", Title = "Tester", HireDate = new DateTime(2022, 2, 20) },
        new Employee { EmployeeId = 5, Name = "Michael Wilson", Title = "Developer", HireDate = new DateTime(2021, 7, 8) },
        new Employee { EmployeeId = 6, Name = "Sarah Brown", Title = "Designer", HireDate = new DateTime(2022, 4, 12) }
    };
    
    // Sidebar state
    private bool SidebarIsOpen = false;
    
    private void ToggleSidebar()
    {
        SidebarIsOpen = !SidebarIsOpen;
    }
    
    // ListView data
    public class ListDataModel
    {
        public string Id { get; set; } = string.Empty;
        public string Text { get; set; } = string.Empty;
        public string IconCss { get; set; } = string.Empty;
    }
    
    private List<ListDataModel> ListItems = new List<ListDataModel>
    {
        new ListDataModel { Id = "1", Text = "Dashboard", IconCss = "e-icons e-home" },
        new ListDataModel { Id = "2", Text = "Projects", IconCss = "e-icons e-folder" },
        new ListDataModel { Id = "3", Text = "Tasks", IconCss = "e-icons e-clipboard" },
        new ListDataModel { Id = "4", Text = "Reports", IconCss = "e-icons e-chart" },
        new ListDataModel { Id = "5", Text = "Settings", IconCss = "e-icons e-settings" }
    };
    
    // TreeView data
    public class TreeItem
    {
        public string Id { get; set; } = string.Empty;
        public string Name { get; set; } = string.Empty;
        public string? ParentId { get; set; }
        public bool HasChild { get; set; }
        public bool Expanded { get; set; }
    }
    
    private List<TreeItem> TreeData = new List<TreeItem>
    {
        new TreeItem { Id = "01", Name = "Projects", HasChild = true, Expanded = true },
        new TreeItem { Id = "01-01", Name = "Website Redesign", ParentId = "01", HasChild = false },
        new TreeItem { Id = "01-02", Name = "Mobile App", ParentId = "01", HasChild = false },
        new TreeItem { Id = "01-03", Name = "E-commerce Platform", ParentId = "01", HasChild = false },
        new TreeItem { Id = "02", Name = "Tasks", HasChild = true, Expanded = false },
        new TreeItem { Id = "02-01", Name = "Pending", ParentId = "02", HasChild = false },
        new TreeItem { Id = "02-02", Name = "Completed", ParentId = "02", HasChild = false },
        new TreeItem { Id = "03", Name = "Team Members", HasChild = false }
    };
    
    private string[] SelectedNodes = new string[] { };
}
